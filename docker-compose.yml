services:
  mydb1:
    image: postgres:16
    container_name: mydb1
    environment:
      POSTGRES_DB: mydb1
      POSTGRES_USER: ${SPRING_DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped

  redis:
    image: redis:7.2
    container_name: redis_db_env_pr3
    ports:
      - "6379:6379"
    networks:
      - app-network
    restart: unless-stopped

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    container_name: elasticsearch_lb2
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
    ports:
      - "9200:9200"
    networks:
      - app-network
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_panel_pr3
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
    ports:
      - "8081:80"
    depends_on:
      - mydb1
    networks:
      - app-network
    restart: unless-stopped

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spring_app_pr3
    ports:
      - "8080:8080"
    depends_on:
      - mydb1
      - redis
    networks:
      - app-network
    env_file:
      - .env
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  pgdata:
